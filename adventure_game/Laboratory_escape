from adventurelib import *
import adventurelib
import random as r
import time as t
"""player stuff"""
player_hp = 10
playername = input('Please enter your character name\n')
playerdmgmodifier = 0
playerhitmodifier = 0
def prompt():
    global player_hp
    if player_hp <= 0: # how the player dies
        print('you have died')
        input('Push ENTER to exit.')
        exit()
    return '\u2665{hp}\u2665 : '.format(hp=player_hp)
adventurelib.prompt = prompt

# inventory
inventory = Bag()

@when('look')
def look():
    print(current_room)

"""Rooms and loot"""
laboratory = Room("""
A white stone covers the walls, several shelves with glowing liquids sit against the south wall.
In the ceter of the room is a stone bed, with a disheveled figure on it.
Two large wooden doors sit on either side of the north wall. One is labeled study, the other labeled hall 
Several large tubes, including the one you were in sit on the west wall.
""")
laboratory.items = Bag([

])
study = Room("""
A small cozy room with a leather chair and a fireplace. One of the walls is covered in bookshelves.
On the north wall sits a desk. As you look closer you can see grotesqe depiction of a human being dissected
A large leather chair faces away from you toward the desk.
""")
study.items = Bag([

])
secret = Room("""
A very small stone room. In the center sits a table with several items on it.
""")
secret.items = Bag([

])
hall = Room("""
A dimmly lit stone hallway. Several sets of armor sit on either side of the hall. 
A large iron gate blocks the way into the next room.
A red carpet lines the floor, muffling your footsteps.
""")
hall.items = Bag([

])
dungeon = Room("""
The room is lit by a single hanging sconce. The flickering flames are cast eerie shadows on the many skeletons hanging on the walls.
A large door sits in the south wall. 
Several cages sit on the east wall. One appears to be occupied...
""")
dungeon.items = Bag([

])
courtyard = Room("""
The fresh air hits your nostrils. You look up and see the sky.
A cobble path leads to a large stone circle. The circle is covered in a green liquid very similar to the one in the lab.
Trees line the courtyard and across from you is a large ornate door.
As you step towards it, the gell forms itself into a large cube...
""")
courtyard.items = Bag([

])
main_hall = Room("""
A long dining table leads up to a throne like chair. A shadowy figure sits in the chair and stares blankely back at you...
""")
main_hall.items = Bag([
    
])

"""Directions"""
# Room.add_direction('study','laboratory','hallway')
# laboratory.add_direction('hall','laboratory')
# laboratory.study = study
# laboratory.hallway = hall
# study.add_direction('secret','study')
# study.secret = secret
# hall.add_direction('dungeon','hall')
# hall.dungeon = dungeon
# dungeon.add_direction('courtyard','dungeon')
# dungeon.courtyard = courtyard
# courtyard.add_direction('main_hall','courtyard')
# courtyard.main_hall = main_hall
laboratory.west = study
study.north = secret
laboratory.north = hall
hall.east = dungeon
dungeon.south = courtyard
courtyard.west = main_hall

"""How to move from room to room"""
# @when('go laboratory', context = 'study.clear')
# @when('go laboratory', context = 'hall.clear')
# @when('go study', context = 'secret')
# @when('go study', context = 'laboratory.clear')
# @when('go secret', context = 'study.clear')
# @when('go hall', context = 'laboratory.clear')
# @when('go hall', context = 'dungeon.clear')
# @when('go dungeon', context = 'hall.clear')
# @when('go dungeon', context = 'courtyard.clear')
# @when('go courtyard', context = 'dungeon.clear')
# @when('go courtyard', context = 'main_hall.clear')
# @when('go main hall', context = 'courtyard.clear')
@when('go DIRECTION')
def go_room(direction):
    global current_room
    room = current_room.exit(direction)
    if room:
        current_room = room
        print(f'You enter the {direction}.')
        look()

@when('take ITEM')
def loot_room(item):
    global current_room
    if item in current_room.items:
        obj: Item = current_room.items.take(item)
        inventory.add(obj)
    else:
        print(f'The is no {item} to take.')

@when('look around')
def look_around():
    global current_room
    print('You find: ')
    if not current_room.items:
        print('*nothing*')
    for items in current_room.items:
        print(f"*{items}")




"""laboratory things"""
monsterhp = r.randint(2,4)
@when('go study', context = 'laboratory.notclear')
@when('go hall', context = 'laboratory.notclear')
def try_to_leave():
    if get_context() == 'laboratory.notclear':    
        say('As you approach the door, the figure breaks free of his shackels and lunges toward you.')
        hit = r.randint(1,100)
        if hit >= 65:
            dmg = r.randint(1,4)
            player_hp -= dmg
            set_context('laboratory.combat')
@when('attack monster', context = 'laboratory.combat')
def attack_monster():
    global playerdmgmodifier
    global playerhitmodifier
    global player_hp
    global monsterhp
    if monsterhp > 0:
        basehit = r.randint(1,100)
        hit = basehit + playerhitmodifier
        if hit >= 50:
            basedmg = r.randint(1,3)
            dmg = basedmg + playerdmgmodifier
            text = r.choice([
                f'You swing at the monster. You connect with its jaw for {dmg} Damage!',
                f'You attempt to strike the monster... You hit it for {dmg} Damage!'
            ])
            print(text)
            monsterhp -= dmg
        else:
            say('')





























say('You awake in a tube, filled with a green liquid.')
t.sleep(2)
say('Your fists pound against the glass')
t.sleep(2)
say('C R A S H')
t.sleep(2)
say('The tube shatters and the liquid pours out')
t.sleep(2)
say('You gather your senses and look around you...')
t.sleep(2)


current_room = laboratory
set_context('laboratory')
look()
def no_command_matches(command):
    print(r.choice([
        'Huh?',
        'Sorry?',
        'I beg your pardon?'
    ]))
adventurelib.no_command_matches = no_command_matches
start()
